<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>User Profile - Wishlist</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <!-- FontAwesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    <style>
      /* General Styles */
      body {
        background-color: #f8f9fa;
        color: #333;
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
      }
    
      /* Navbar Styles */
      .navbar {
        background: #2874f0;
        padding: 1rem 2rem;
        color: white;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      }
    
      .nav-link {
        font-weight: bold;
        position: relative;
      }
    
      .nav-link::after {
        content: "";
        position: absolute;
        left: 0;
        bottom: -2px;
        width: 0;
        height: 2px;
        background-color: black;
        transition: width 0.3s ease-in-out;
      }
    
      .nav-link:hover::after {
        width: 100%;
      }
    
      /* Main Content Layout */
      .container {
        max-width: 1300px;
        margin: 2rem auto;
        padding: 0 2rem;
        display: grid;
        grid-template-columns: 280px 1fr;
        gap: 2rem;
      }
    
      /* Sidebar Styles */
      .sidebar {
        background: white;
        padding: 1.5rem;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
      }
    
      .menu-list {
        list-style: none;
      }
    
      .menu-item {
        margin-bottom: 0.5rem;
      }
    
      .menu-link {
        display: block;
        padding: 0.8rem 1rem;
        color: #555;
        text-decoration: none;
        border-radius: 8px;
        transition: all 0.3s ease;
      }
    
      .menu-link.active {
        background: #2874f0;
        color: white;
      }
    
      .menu-link:hover:not(.active) {
        background: #f8f9fa;
        color: #382ef4;
      }
    
      /* Wishlist Content Styles */
      .wishlist-container {
        background: white;
        padding: 2rem;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
      }
    
      .section-title {
        font-size: 1.5rem;
        font-weight: 600;
        margin-bottom: 1.5rem;
        padding-bottom: 1rem;
        border-bottom: 2px solid #f0f0f0;
      }
    
      /* Wishlist Items */
      .wishlist-items {
        display: flex;
        flex-direction: column;
        gap: 1rem;
      }
    
      .wishlist-item {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 1rem;
        border: 1px solid #ddd;
        border-radius: 12px;
        background: #fff;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
      }
    
      .wishlist-item:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
      }
    
      .product-image-container {
        width: 120px;
        height: 120px;
        margin-right: 1rem;
        position: relative;
      }
    
      .product-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 8px;
      }
    
      .product-image.blurred {
        filter: blur(0px);
        opacity: 0.7;
      }
    
      .out-of-stock-overlay {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        color: rgb(201, 16, 16);
        font-size: 16px;
        font-weight: bold;
        z-index: 1;
        padding: 8px 16px;
        border-radius: 4px;
        background-color: #a9a9a99e;
        color: #c90000;
        text-transform: uppercase;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      }
    
      .product-info {
        flex: 1;
      }
    
      .product-title {
        font-size: 1.125rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
        color: #333;
      }
    
      .price-container {
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }
    
      .current-price {
        font-size: 1.25rem;
        font-weight: 700;
        color: #000;
      }
    
      .original-price {
        font-size: 1rem;
        color: #666;
        text-decoration: line-through;
      }
    
      .discount {
        font-size: 0.875rem;
        color: #388e3c;
        font-weight: 500;
      }
    
      .add-to-cart-btn {
        background-color: #28a745;
        color: white;
        border: none;
        padding: 8px 16px;
        border-radius: 4px;
        cursor: pointer;
        margin-top: 10px;
      }
    
      .add-to-cart-btn:hover {
        background-color: #218838;
      }
    
      .btn-dangr {
        background-color: transparent;
        color: black;
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 6px;
        cursor: pointer;
        transition: color 0.3s ease;
      }
    
      .btn-dangr:hover {
        color: #333;
      }
    
      /* Empty Wishlist Styles */
      .empty-wishlist {
        text-align: center;
        padding: 4rem 1rem;
      }
    
      .empty-wishlist h2 {
        font-size: 1.5rem;
        color: #333;
        margin-bottom: 1.5rem;
      }
    
      .action-button {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 6px;
        font-size: 1rem;
        cursor: pointer;
        transition: background-color 0.3s ease;
      }
    
      .action-button:hover {
        background-color: #0056b3;
      }
    
      /* Responsive Design */
      @media (max-width: 768px) {
        .container {
          grid-template-columns: 1fr;
        }
    
        .wishlist-item {
          flex-direction: column;
          align-items: flex-start;
        }
    
        .product-image-container {
          width: 100%;
          height: 200px;
          margin-right: 0;
          margin-bottom: 1rem;
        }
    
        .product-image {
          border-radius: 8px 8px 0 0;
        }
      }
    
      .product-link {
        text-decoration: none; /* Remove underline */
        color: inherit; /* Inherit text color */
        flex: 1; /* Ensure it takes up the available space */
        display: flex; /* Align content properly */
        align-items: center; /* Center content vertically */
      }
    </style>
  </head>
  <body>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg bg-light">
      <div class="container-fluid">
        <!-- Brand -->
        <a class="navbar-brand fw-bold" href="/">TIME ZONE.</a>

        <!-- Centered Navigation Links -->
        <div class="mx-auto">
          <ul class="navbar-nav d-flex flex-row gap-4">
            <li class="nav-item">
              <a class="nav-link" href="/">Home</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/shopPage">Shop</a>
            </li>
          </ul>
        </div>

        <!-- User Icon -->
        <div>
          <a href="#" class="nav-link">
            <i class="fas fa-user fs-4"></i>
          </a>
        </div>
      </div>
    </nav>

    <!-- Main Content -->
    <div class="container">
      <!-- Sidebar -->
      <aside class="sidebar">
        <ul class="menu-list">
          <li class="menu-item">
            <a href="/userProfile" class="menu-link">Profile Details</a>
          </li>
          <li class="menu-item">
            <a href="/cart" class="menu-link">My Cart</a>
          </li>
          <li class="menu-item">
            <a href="/orders" class="menu-link">My Orders</a>
          </li>
          <li class="menu-item">
            <a href="/wishlist" class="menu-link active">My Wishlist</a>
          </li>
          <li class="menu-item">
            <a href="/wallet" class="menu-link">My Wallet</a>
          </li>
          <li class="menu-item">
            <a href="/coupon" class="menu-link">Coupons</a>
          </li>
          <li class="menu-item">
            <a href="/helpcenter" class="menu-link">Help Center</a>
          </li>
        </ul>
      </aside>

      <div class="wishlist-container">
        <h2 class="section-title">My Wishlist</h2>
        <% if (wishlist.length > 0) { %>
          <div class="wishlist-items">
            <% wishlist.forEach(product => { %>
              <div class="wishlist-item" data-product-id="<%= product.productId._id %>">
                <!-- Wrap product content in an <a> tag -->
                <a href="/productDetails/<%= product.productId._id %>" class="product-link">
                  <div class="d-flex align-items-center">
                    <div class="product-image-container">
                      <img src="<%= product.productId.image[0] %>" alt="<%= product.productId.productName %>" class="product-image <%= product.productId.stockQuantity === 0 ? 'blurred' : '' %>" />
                      <% if (product.productId.stockQuantity === 0) { %>
                        <div class="out-of-stock-overlay">
                          <span>Stock out</span>
                        </div>
                      <% } %>
                    </div>
                    <div class="product-info">
                      <h3 class="product-title"><%= product.productId.productName %></h3>
                      <div class="price-container">
                        <% 
                        // Ensure values are numbers
                        const discountPrice = Number(product.productId.discountprice) || 0;
                        const categoryDiscountPrice = Number(product.productId.categoryDiscountprice) || 0;
                        const originalPrice = Number(product.productId.price) || 0;
                        %>
                        
                        <% if (discountPrice > 0 && (categoryDiscountPrice === 0 || discountPrice < categoryDiscountPrice)) { %>
                          <span class="current-price">₹<%= discountPrice.toLocaleString('en-IN') %></span>
                          <span class="original-price">₹<%= originalPrice.toLocaleString('en-IN') %></span>
                          <span class="discount"><%= Math.round((originalPrice - discountPrice) / originalPrice * 100) %>% off</span>
                        <% } else if (categoryDiscountPrice > 0 && (discountPrice === 0 || categoryDiscountPrice < discountPrice)) { %>
                          <span class="current-price">₹<%= categoryDiscountPrice.toLocaleString('en-IN') %></span>
                          <span class="original-price">₹<%= originalPrice.toLocaleString('en-IN') %></span>
                          <span class="discount"><%= Math.round((originalPrice - categoryDiscountPrice) / originalPrice * 100) %>% off</span>
                        <% } else { %>
                          <span class="current-price">₹<%= originalPrice.toLocaleString('en-IN') %></span>
                        <% } %>
                      </div>
                      <div>
                        <% if (product.productId.stockQuantity > 0) { %>
                          <!-- Ensure the button has the correct class and data attribute -->
                          <button class="add-to-cart-btn" data-product-id="<%= product.productId._id %>">Add to Cart</button>
                        <% } %>
                      </div>
                    </div>
                  </div>
                </a>
                <!-- Delete button outside the <a> tag -->
                <button class="btn-dangr" onclick="removeFromWishlist('<%= product.productId._id %>')">
                  <i class="fas fa-trash"></i>
                </button>
              </div>
            <% }) %>
          </div>
        <% } else { %>
          <div class="empty-wishlist">
            <h2>Your wishlist is empty!</h2>
            <button class="action-button" onclick="window.location.href='/shopPage'">Browse now</button>
          </div>
        <% } %>
      </div>
    <!-- Bootstrap JS -->
     <!-- SweetAlert CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

<!-- SweetAlert JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
     async function removeFromWishlist(productId) {
  try {
    const response = await fetch('/remove-from-wishlist', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ productId }),
    });

    const result = await response.json();

    if (result.success) {
      // Show SweetAlert success notification
      Swal.fire({
        icon: 'success',
        title: 'Success!',
        text: 'Product removed from wishlist.',
        toast: true,
        position: 'top-end',
        showConfirmButton: false,
        timer: 3000,
        timerProgressBar: true,
      });

      // Remove the product from the UI dynamically
      const productElement = document.querySelector(`.wishlist-item[data-product-id="${productId}"]`);
      if (productElement) {
        productElement.remove();
      }
    } else {
      // Show SweetAlert error notification
      Swal.fire({
        icon: 'error',
        title: 'Error!',
        text: result.message || 'Failed to remove product from wishlist.',
        toast: true,
        position: 'top-end',
        showConfirmButton: false,
        timer: 3000,
        timerProgressBar: true,
      });
    }
  } catch (error) {
    console.error('Error removing product from wishlist:', error);
    Swal.fire({
      icon: 'error',
      title: 'Error!',
      text: 'An error occurred while removing the product.',
      toast: true,
      position: 'top-end',
      showConfirmButton: false,
      timer: 3000,
      timerProgressBar: true,
    });
  }
}
    </script>
   <script>
   document.addEventListener("DOMContentLoaded", () => {
  // Select all "Add to Cart" buttons
  const addToCartButtons = document.querySelectorAll(".add-to-cart-btn");

  addToCartButtons.forEach(button => {
    button.addEventListener("click", (e) => {
      e.preventDefault(); // Prevent default anchor behavior

      // Disable the button to prevent multiple clicks
      button.disabled = true;

      // Get the product ID from the data attribute
      const productId = button.getAttribute("data-product-id");

      // Send a POST request to add the product to the cart
      fetch("/add-to-cart", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({ productId })
      })
      .then(response => response.json())
      .then(data => {
        button.disabled = false; // Re-enable the button

        if (data.success) {
          // Show success feedback in a small toast alert (like Remove from Wishlist)
          Swal.fire({
            icon: 'success',
            title: 'Added to Cart',
            text: 'Product added to cart.',
            toast: true, // Enable toast mode
            position: 'top-end', // Show at top-right corner
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
          });

          // Update cart count in the UI
          const cartCountElement = document.querySelector(".cart-count");
          if (cartCountElement) {
            const currentCount = parseInt(cartCountElement.textContent) || 0;
            cartCountElement.textContent = currentCount + 1;
          }
        } else if (data.message === "Out of stock") {
          // Handle out-of-stock scenario
          Swal.fire({
            icon: 'error',
            title: 'Out of Stock',
            text: 'Sorry, we don\'t have any more units for this item.',
            toast: true, // Enable toast mode
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
          });
        } else {
          // Handle other errors
          Swal.fire({
            icon: 'error',
            title: 'Failed to Add',
            text: data.message || 'Something went wrong. Try again.',
            toast: true, // Enable toast mode
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
          });
        }
      })
      .catch(error => {
        button.disabled = false; // Re-enable the button
        console.error("Error adding to cart:", error);
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'An error occurred. Try again.',
          toast: true, // Enable toast mode
          position: 'top-end',
          showConfirmButton: false,
          timer: 3000,
          timerProgressBar: true,
        });
      });
    });
  });
});

   </script>
